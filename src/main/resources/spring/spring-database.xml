<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" lazy-init="false">
        <property name="DriverClassName" value="${database.driverClass}"/>
        <property name="Url" value="${database.jdbcUrl}"/>
        <property name="Username" value="${database.user}"/>
        <property name="Password" value="${database.password}"/>
        <property name="InitialSize" value="${database.initialPoolSize}"/>
        <property name="MinIdle" value="${database.minPoolSize}"/>
        <property name="MaxActive" value="${database.maxPoolSize}"/>
        <property name="MinEvictableIdleTimeMillis" value="${database.maxIdleTime}"/>
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
    </bean>

    <bean id="defaultSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件  路径根据实际情况配置-->
        <!--<property name="mapperLocations" value="classpath*:mybatis/yiyuangou/*.xml"></property>-->
    </bean>

    <!-- MyBatis 动态实现 -->
    <!--<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!-- 对Dao 接口动态实现，需要知道接口在哪,可指定多个包，包与包之间用逗号或分号分隔 -->
        <!--路径根据实际情况配置-->
        <!--<property name="basePackage" value="com.dianwan.yiyuangou.dao"/>-->
        <!--正常情况下 没 有 必 要 去 指 定 SqlSessionFactory 或 SqlSessionTemplate-->
        <!--<property name="sqlSessionFactoryBeanName" value="defaultSqlSessionFactory"/>-->
    <!--</bean>-->

    <!--<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->


    <!--<tx:advice id="userTxAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="delete*" propagation="REQUIRED" read-only="false"-->
    <!--rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>-->
    <!--<tx:method name="add*" propagation="REQUIRED" read-only="false"-->
    <!--rollback-for="java.lang.RuntimeException" />-->
    <!--<tx:method name="update*" propagation="REQUIRED" read-only="false"-->
    <!--rollback-for="java.lang.Exception" />-->
    <!--<tx:method name="edit*" propagation="REQUIRED" read-only="false"-->
    <!--rollback-for="java.lang.Exception" />-->

    <!--<tx:method name="find*" propagation="SUPPORTS"/>-->
    <!--<tx:method name="query*" propagation="SUPPORTS"/>-->
    <!--<tx:method name="get*" propagation="SUPPORTS"/>-->
    <!--<tx:method name="select*" propagation="SUPPORTS"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--<aop:pointcut id="data" expression="execution(* com.admin..*.*(..))" />-->
    <!--<aop:advisor pointcut-ref="data" advice-ref="userTxAdvice" />-->
    <!--</aop:config>-->

</beans>